<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/2wBDAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEB
        AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQH/wAARCAAgACADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD8Tv2aLn9rD9pj9oL4jp8Av2JfiXqXin46fE74j/tE/s/Taf8A
        D/w/+z5J8TPDWsfAD9sfwD4X8S+Mfize/Ej4Rx3etw2fxz+Dsk118JviRaP/AMI/4R+JXxa8M39x8YvE
        Hjnx78TPnDXv2d/jX4u+JHi/9k79pXxRZ/sS/EDxV+0ZM/7RPjvxfeaT8NPgDJpsl/8AC7Ste8MfHn4l
        fGT4lfCq2+LGu/sy6P4A8Z/GP4cSeGfFP7VvxD/aR8X+N/GXiTw3r2reOvE+s/Enx7/VH/wTY/4KG/si
        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
        C4WeIxFqC//Z
</value>
  </data>
</root>